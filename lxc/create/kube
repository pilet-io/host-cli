#!/bin/bash

#> [name]=? [org]=? [profile]=medium

VMNAME="$NAME-$ORG"
if [[ "$NAME" == "main" ]]; then
 K3NAME="$ORG"
else
 K3NAME="$NAME-$ORG"
fi

lxc launch kube-medium --profile medium --profile base $VMNAME

while true; do
  sleep 2s
  IPV6=$(lxc exec $VMNAME ip addr 2>/dev/null | grep 2a01 | awk '{print $2}')
  IPV4=$(lxc exec $VMNAME ip addr 2>/dev/null | grep 'inet 192' | awk '{print $2}')
  echo -n "."
  IPV6=${IPV6/\/64/}
  IPV4=${IPV4/\/24/}
  if [ ! -z "$IPV6" ]; then
    echo ""
    echo "IPs are $IPV4, $IPV6"
    store_save_vm $VMNAME medium $VMNAME.kueb.io $IPV4 $IPV6 > /dev/null
    echo "#> host=$(hostname)"
    echo "#> vm=$NAME"
    echo "#> name=$VMNAME"
    echo "#> profile=medium"
    echo "#> dns=$K3NAME.kueb.io"
    echo "#> ip4=$IPV4"
    echo "#> ip6=$IPV6"
    echo ""
    break
  fi
done

while true; do
  DONE=$(lxc exec $VMNAME -- cat /root/.done 2>/dev/null)
  if [[ "$DONE" == "done" ]]; then
    echo "Done"
    break
  fi
  echo -n "."
  sleep 2s
done

KUBECFG="$(lxc exec $VMNAME -- cat /etc/rancher/k3s/k3s.yaml)"
KUBECFG=${KUBECFG/127.0.0.1/$K3NAME.kueb.io}

echo "$KUBECFG" | awk '{print "##>"$0}'

cat <<EOF > /etc/traefik/services/${K3NAME}.yaml
http:
  routers:
    route-$K3NAME:
      rule: "Host(\`${K3NAME}.kueb.io\`)"
      tls:
        certResolver: resolver0
        domains:
          - main: "*.kueb.io"
      service: service-$K3NAME
      priority: 1000
      entryPoints:
        - https

  services:
    service-$K3NAME:
      loadBalancer:
        servers:
          - url: "http://[$IP4]:80"
EOF

cat <<EOF > /etc/traefik/services/${K3NAME}-6443.yaml
tcp:
  routers:
    route-$K3NAME-k8s:
      rule: "HostSNI(\`${K3NAME}.kueb.io\`)"
      tls:
        passthrough: true
      service: service-$K3NAME-k8s
      priority: 1000
      entryPoints:
        - k8s

  services:
    service-$K3NAME-k8s:
      loadBalancer:
        servers:
          - address: "[$IP4]:6443"
EOF

dns_create_record CNAME $K3NAME kueb.io $SYS_HOSTNAME
