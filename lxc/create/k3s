#!/bin/bash

#> [name]=? [org]=? [profile]=md

VMNAME="$ORG-$NAME"

with lxc create vm --name $NAME --org $ORG --profile $PROFILE
if [ $? -ne 0 ]; then
  echo "Failed creating container $VMNAME"
  exit 1
fi


IP6=$(store_get_vm_addr6 $VMNAME)
lxc exec $VMNAME -- bash -c "INSTALL_K3S_EXEC='server --tls-san ${NAME}.pilet.site --flannel-ipv6-masq --cluster-cidr 10.42.0.0/16,2001:cafe:42:0::/56 --service-cidr 10.43.0.0/16,2001:cafe:43:1::/112' /root/cli/scripts/k3s-install.sh"

#TOKEN=$(lxc exec $VMNAME -- cat /var/lib/rancher/k3s/server/token)
KUBECFG="$(lxc exec $VMNAME -- cat /etc/rancher/k3s/k3s.yaml)"
KUBECFG=${KUBECFG/127.0.0.1/$VMNAME.pilet.site}

echo "$KUBECFG" | awk '{print "##>"$0}'

#echo "$KUBECFG" | store_yaml_post infra/hosts/$SYS_HOSTNAME/vms/$VMNAME/kube/config

cat <<EOF > /etc/traefik/services/${VMNAME}.yaml
http:
  routers:
    route-$VMNAME:
      rule: "Host(\`${NAME}.pilet.site\`)"
      tls:
        certResolver: resolver0
        domains:
          - main: "*.pilet.site"
      service: service-$VMNAME
      priority: 1000
      entryPoints:
        - https

  services:
    service-$VMNAME:
      loadBalancer:
        servers:
          - url: "http://[$IP6]:80"
EOF

cat <<EOF > /etc/traefik/services/${VMNAME}-6443.yaml
tcp:
  routers:
    route-$VMNAME-k8s:
      rule: "HostSNI(\`${NAME}.pilet.site\`)"
      tls:
        passthrough: true
      service: service-$VMNAME-k8s
      priority: 1000
      entryPoints:
        - k8s

  services:
    service-$VMNAME-k8s:
      loadBalancer:
        servers:
          - address: "[$IP6]:6443"
EOF

dns_create_record CNAME $VMNAME pilet.site $SYS_HOSTNAME
