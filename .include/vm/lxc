#!/bin/bash

function vm_exec() {
  NAME=$1
  COMMAND=$2
  lxc exec $NAME -- bash -c "$COMMAND"
}

function vm_shell() {
  cat | lxc shell $1
}

function vm_create() {
  # admin pilet.cloud medium
  NAME=$1
  ZONE=$2
  PROFILE=$3

  lxc launch ubuntu:22.04 --vm --profile ${PROFILE} ${NAME}
  sleep 1s

  while ! lxc exec ${NAME} -- ip addr &> /dev/null
  do
    echo -n "."
    sleep 2s
  done
  echo ""

  lxc exec ${NAME} -- systemctl is-system-running --wait
  echo "VM ${NAME} started"

  IP6=$(lxc exec ${NAME} -- bash -c "ip -6 addr | grep 2a01 | awk '{print \$2}' | sed 's|/64||g'")
  dns_create_record AAAA $NAME $ZONE $IP6

  cat<<EOF | config_save_yaml infra/vm/${NAME}.${ZONE}
name: "$NAME"
zone: "$ZONE"
hostname: "$NAME.$ZONE"
profile: "$PROFILE"
address: "$IP6"
host: "$(hostname)"
EOF
}

function vm_delete() {
  # admin pilet.cloud medium
  NAME=$1
  ZONE=$2

  lxc stop $NAME
  lxc delete $NAME
  dns_delete_record $NAME $ZONE
  config_delete infra/vm/${NAME}.${ZONE}
}


function vm_save_uno_profile() {
  # 1 4 100 small
  CPU=$1
  RAM=$2
  DISK=$3
  NAME=$4
  echo "Saving LXC profile $NAME : $CPU $RAM $DISK"
  lxc profile create ${NAME}

  cat <<EOF | lxc profile edit ${NAME}
config:
  limits.cpu: "${CPU}"
  limits.memory: ${RAM}GB
  cloud-init.network-config: |
    version: 2
    ethernets:
      enp5s0:
        dhcp4: true
description: ${NAME} size profile
devices:
  enp5s0:
    name: enp5s0
    network: br0
    type: nic
  root:
    path: /
    pool: default
    size: ${DISK}GB
    type: disk
EOF
}


function vm_save_profile_base() {
  echo "Saving base profile"
  lxc profile create base

  cat <<EOF | lxc profile edit base
config:
  cloud-init.user-data: |
    #cloud-config
    runcmd:
      - /root/cli/with host setup configuration
description: Basic profile
EOF
}

